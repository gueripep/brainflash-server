"""first migration

Revision ID: 967e04df41ff
Revises: 
Create Date: 2025-08-17 09:44:57.108146

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '967e04df41ff'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('flashcard_decks_backup')
    op.add_column('flashcard_decks', sa.Column('owner_id', sa.UUID(), nullable=False))
    op.alter_column('flashcard_decks', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('flashcard_decks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_foreign_key(None, 'flashcard_decks', 'users', ['owner_id'], ['id'])
    op.alter_column('flashcards', 'deck_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('flashcards', 'discussion')
    op.drop_column('flashcards', 'fsrs')
    op.drop_column('flashcards', 'final_card')
    op.add_column('study_sessions', sa.Column('question_audio_id', sa.Integer(), nullable=True))
    op.add_column('study_sessions', sa.Column('answer_audio_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'study_sessions', 'audio_files', ['answer_audio_id'], ['id'])
    op.create_foreign_key(None, 'study_sessions', 'audio_files', ['question_audio_id'], ['id'])
    op.drop_column('study_sessions', 'reviews')
    op.drop_column('study_sessions', 'correct_answers')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('study_sessions', sa.Column('correct_answers', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('study_sessions', sa.Column('reviews', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'study_sessions', type_='foreignkey')
    op.drop_constraint(None, 'study_sessions', type_='foreignkey')
    op.drop_column('study_sessions', 'answer_audio_id')
    op.drop_column('study_sessions', 'question_audio_id')
    op.add_column('flashcards', sa.Column('final_card', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('flashcards', sa.Column('fsrs', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('flashcards', sa.Column('discussion', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('flashcards', 'deck_id',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_constraint(None, 'flashcard_decks', type_='foreignkey')
    op.alter_column('flashcard_decks', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('flashcard_decks', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('flashcard_decks', 'owner_id')
    op.create_table('flashcard_decks_backup',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('card_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
